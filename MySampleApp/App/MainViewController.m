//
//  MainViewController.m
//  MySampleApp
//
//
// Copyright 2015 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//

#import <Foundation/Foundation.h>

#import "MainViewController.h"
#import "DemoFeature.h"
#import "AWSIdentityManager.h"
#import "ColorThemeSettings.h"
#import <Parse/Parse.h>
#import "TeamsListViewController.h"

static NSString * LOG_TAG = @"MainViewController";

@interface MainViewController ()
@property (weak, nonatomic) IBOutlet UILabel *mTeamLabel;

@property (nonatomic, strong) NSMutableArray *demoFeatures;

@property (nonatomic, strong) id didSignInObserver;
@property (nonatomic, strong) id didSignOutObserver;

@end

@implementation MainViewController

#pragma mark - View Controller lifecycle

- (void)viewDidLoad {
    [super viewDidLoad];

    self.navigationItem.backBarButtonItem = [[UIBarButtonItem alloc] initWithTitle:@"Back"
                                                                             style:UIBarButtonItemStylePlain
                                                                            target:nil
                                                                            action:nil];
    
    // You need to call `- updateTheme` here in case the sign-in happens before `- viewWillAppear:` is called.
    [self updateTheme];

    [self presentSignInViewController];

    NSLog(@"%@: Loading...", LOG_TAG);
    self.demoFeatures = [[NSMutableArray alloc] init];

    DemoFeature *demoFeature = [[DemoFeature alloc] initWithName:NSLocalizedString(@"User Sign-in", @"Label for demo menu option.")
                                                          detail:NSLocalizedString(@"Enable user login with popular 3rd party providers.", @"Description for demo menu option.")
                                                            icon:@"UserIdentityIcon"
                                                      storyboard:@"UserIdentity"];
    //[self.demoFeatures addObject:demoFeature];

    demoFeature = [[DemoFeature alloc] initWithName:NSLocalizedString(@"Push Notifications", @"Label for demo menu option.")
                                detail:NSLocalizedString(@"Send individual or group push notifications to your apps.", @"Description for demo menu option.")
                                  icon:@"PushIcon"
                            storyboard:@"PushNotification"];
    //[self.demoFeatures addObject:demoFeature];

    demoFeature = [[DemoFeature alloc] initWithName:NSLocalizedString(@"User Data Storage", @"Label for demo menu option.")
                                detail:NSLocalizedString(@"Save user files in the cloud and sync user data in key/value pairs.", @"Description for demo menu option.")
                                  icon:@"UserFilesIcon"
                            storyboard:@"UserDataStorage"];
    //[self.demoFeatures addObject:demoFeature];

    __weak MainViewController *weakSelf = self;
    self.didSignInObserver =[[NSNotificationCenter defaultCenter] addObserverForName:AWSIdentityManagerDidSignInNotification
                                                                              object:[AWSIdentityManager sharedInstance]
                                                                               queue:[NSOperationQueue mainQueue]
                                                                          usingBlock:^(NSNotification * _Nonnull note) {
                                                                              [weakSelf setupRightBarButtonItem];
                                                                              // You need to call `- updateTheme` here in case the sign-in happens after `- viewWillAppear:` is called.
                                                                              [weakSelf updateTheme];
                                                                             
                                                                             if ([[AWSIdentityManager sharedInstance] isLoggedIn]) {
                                                                                [self showWelcomeDialog];
                                                                             }
                                                                          }];
    self.didSignOutObserver = [[NSNotificationCenter defaultCenter] addObserverForName:AWSIdentityManagerDidSignOutNotification
                                                                                object:[AWSIdentityManager sharedInstance]
                                                                                 queue:[NSOperationQueue mainQueue]
                                                                            usingBlock:^(NSNotification * _Nonnull note) {
                                                                                [weakSelf setupRightBarButtonItem];
                                                                                [weakSelf updateTheme];
                                                                            }];

    [self setupRightBarButtonItem];

}

- (void) showWelcomeDialog {
   dispatch_async(dispatch_get_main_queue(), ^{
      UIAlertController *alert= [UIAlertController
                                 alertControllerWithTitle:NSLocalizedString(@"Woohoo!!!", nil)
                                 message:NSLocalizedString(@"You have successfully signed up. Enjoy your evening with people around you. You can join any of the teams around you or create your own team.",nil)
                                 preferredStyle:UIAlertControllerStyleAlert];
      

      UIAlertAction* actionJoin = [UIAlertAction actionWithTitle:NSLocalizedString(@"Join a team", nil) style:UIAlertActionStyleDefault
                                                     handler:^(UIAlertAction * action){
                                                        //Do Some action here
                                                        [__activityIndicator startAnimating];
                                                        if(NULL == mLocationManager) {
                                                           mLocationManager = [[LocationManager alloc] init];
                                                           mLocationManager.delegate = self;
                                                        }
                                                        showTeamList = NO;
                                                        [self performSegueWithIdentifier: @"TeamsList" sender:self];
                                                        
                                                     }];
      [alert addAction:actionJoin];
      
      UIAlertAction* actionCreate = [UIAlertAction actionWithTitle:NSLocalizedString(@"Create a team", nil) style:UIAlertActionStyleDefault
                                                     handler:^(UIAlertAction * action){
                                                        //Do Some action here
                                                        [__activityIndicator startAnimating];
                                                        if(NULL == mLocationManager) {
                                                           mLocationManager = [[LocationManager alloc] init];
                                                           mLocationManager.delegate = self;
                                                        }
                                                        [self performSegueWithIdentifier: @"CreateTeam" sender:self];                                                     
                                                        
                                                     }];
      [alert addAction:actionCreate];
      [self presentViewController:alert animated:YES completion:nil];
   });
}

- (void) viewWillDisappear:(BOOL)animated {
   mLocationManager = nil;
   [__activityIndicator stopAnimating];
}

- (void) viewDidAppear:(BOOL)animated {
   if(NULL == mLocationManager) {
      mLocationManager = [[LocationManager alloc] init];
      mLocationManager.delegate = self;
   }
   PFUser* currentUser = [PFUser currentUser];
   if (currentUser) {
      _mCurrentTeam = [currentUser objectForKey:@"currentTeam"];
   }
   [_mCurrentTeam fetchInBackgroundWithBlock:^(PFObject *PF_NULLABLE_S object,  NSError *PF_NULLABLE_S error){
      if (!error) {
         NSString* name = [_mCurrentTeam objectForKey:@"name"];
         _mTeamLabel.text = name;
      }
   }];
}

- (void)dealloc {
    [[NSNotificationCenter defaultCenter] removeObserver:self.didSignInObserver];
    [[NSNotificationCenter defaultCenter] removeObserver:self.didSignOutObserver];
}

- (void)setupRightBarButtonItem {
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
       
       UIButton *backButton = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, 26, 26)];
       [backButton setImage:[UIImage imageNamed:@"arrow_white.png"] forState:UIControlStateNormal];
       [backButton setShowsTouchWhenHighlighted:TRUE];
       [backButton addTarget:self action:@selector(handleLogout) forControlEvents:UIControlEventTouchDown];
       UIBarButtonItem *logoutButton = [[UIBarButtonItem alloc] initWithCustomView:backButton];
       self.navigationItem.hidesBackButton = TRUE;
       
       self.navigationItem.leftBarButtonItem = logoutButton;
       
    });
}

- (void)presentSignInViewController {
    if (![AWSIdentityManager sharedInstance].isLoggedIn) {
        UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"SignIn" bundle:nil];
        UIViewController *viewController = [storyboard instantiateViewControllerWithIdentifier:@"SignIn"];
        [self presentViewController:viewController
                           animated:YES
                         completion:nil];
    }
}

#pragma mark -

- (void)updateTheme {
    ColorThemeSettings *settings = [ColorThemeSettings sharedInstance];
    [settings loadSettings:^(ColorThemeSettings *themeSettings, NSError *error) {
        if (error) {
            NSLog(@"Failed to load the color theme settings. %@", error);
            return;
        }
        dispatch_async(dispatch_get_main_queue(), ^{
            UIColor *titleTextColor = UIColorFromARGB(themeSettings.theme.titleTextColor);
            self.navigationController.navigationBar.barTintColor = UIColorFromARGB(themeSettings.theme.titleBarColor)
            self.view.backgroundColor = UIColorFromARGB(themeSettings.theme.backgroundColor);
            self.navigationController.navigationBar.tintColor = titleTextColor;
           [self.navigationController.navigationBar setTitleTextAttributes: @{ NSForegroundColorAttributeName : titleTextColor}];
        });
    }];
}



- (void)handleLogout {
   
    if ([[AWSIdentityManager sharedInstance] isLoggedIn]) {
        [[ColorThemeSettings sharedInstance] wipe];
        [[AWSIdentityManager sharedInstance] logoutWithCompletionHandler:^(id result, NSError *error) {
            [self.navigationController popToRootViewControllerAnimated:NO];
            [self setupRightBarButtonItem];
            [self presentSignInViewController];
        }];
        //NSLog(@"%@: %@ Logout Successful", LOG_TAG, [signInProvider getDisplayName]);
    } else {
       [self.navigationController popToRootViewControllerAnimated:NO];
       [self setupRightBarButtonItem];
       UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"SignIn" bundle:nil];
       UIViewController *viewController = [storyboard instantiateViewControllerWithIdentifier:@"SignIn"];
       [self presentViewController:viewController
                          animated:YES
                        completion:nil];
    }
}

- (void)didUpdateCurrentLocation:(CLLocation*)location subLocality:(NSString*)subLocality inLocality:(NSString*)locality {
   [__activityIndicator stopAnimating];
   if (subLocality) {
      self.navigationItem.title = [NSString stringWithFormat:@"%@, %@",subLocality,locality];
   }
   else {
      self.navigationItem.title= [NSString stringWithFormat:@"%@",locality];
   }
   
   PFGeoPoint *point = [PFGeoPoint geoPointWithLatitude:location.coordinate.latitude longitude:location.coordinate.longitude];
   PFUser *user = [PFUser currentUser];
   if (user && point) {
      user[@"currentLocation"] = point;
      [user saveInBackground];
   }
    NSLog(@"location =%@ / %@",subLocality,locality);
}

- (IBAction)onAddTeamMembers:(id)sender {
   if(![MFMessageComposeViewController canSendText]) {
      UIAlertView *warningAlert = [[UIAlertView alloc] initWithTitle:@"BuddyProject" message:NSLocalizedString(@"Your device doesn't support SMS!",nil) delegate:nil cancelButtonTitle:NSLocalizedString(@"OK",nil) otherButtonTitles:nil];
      [warningAlert show];
   }
   else {

      MFMessageComposeViewController *smsController = [[MFMessageComposeViewController alloc] init];
      smsController.messageComposeDelegate = self;
      smsController.body = [NSString stringWithFormat:@"Hey,\nI just created a team '%@' on BuddyProject. You are invited to join the fun.",_mTeamLabel.text];
      [self presentViewController:smsController animated:YES completion:nil];
   }
   
}

- (void)messageComposeViewController:(MFMessageComposeViewController *)controller didFinishWithResult:(MessageComposeResult) result
{
   switch (result) {
      case MessageComposeResultCancelled:

         break;
         
      case MessageComposeResultFailed:
      {

         UIAlertView *warningAlert = [[UIAlertView alloc] initWithTitle:@"BuddyProject" message:NSLocalizedString(@"Failed to send SMS!",nil) delegate:nil cancelButtonTitle:NSLocalizedString(@"OK",nil) otherButtonTitles:nil];
         [warningAlert show];
         break;
      }
         
      case MessageComposeResultSent:
      {
         UIAlertView *warningAlert = [[UIAlertView alloc] initWithTitle:@"BuddyProject" message:NSLocalizedString(@"Invite sent successfully!",nil) delegate:nil cancelButtonTitle:NSLocalizedString(@"OK",nil) otherButtonTitles:nil];
         [warningAlert show];
      }
         break;
         
      default:
         break;
   }
   
   [self dismissViewControllerAnimated:YES completion:nil];
}

- (IBAction)showTeams:(id)sender {
   showTeamList = YES;
   [self performSegueWithIdentifier: @"TeamsList" sender:self];
}


#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
   // Get the new view controller using [segue destinationViewController].
   // Pass the selected object to the new view controller.
   if([segue.identifier isEqualToString:@"TeamsList"])
   {
      TeamsListViewController* list = [segue destinationViewController];
      if(showTeamList) {
         list.challengeMode = YES;
      }
      else {
         list.challengeMode = NO;
      }
   }
}

@end

@implementation FeatureDescriptionViewController

- (void)viewDidLoad {
    [super viewDidLoad];

    self.navigationItem.backBarButtonItem = [[UIBarButtonItem alloc] initWithTitle:@"Back"
                                                                             style:UIBarButtonItemStylePlain
                                                                            target:nil
                                                                            action:nil];
}

@end
